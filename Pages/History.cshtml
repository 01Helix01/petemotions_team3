@page "/History/{param?}"
@model HistoryModel
@{
    ViewData["Title"] = "History page";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">
</head>

<!-- Chart.js-->
<script
src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js">
</script>

<!-- full calendar -->
<script src="
https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.js
"></script>


<!-- Jquery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<div class="text-center">

    <h1 class="display-4" style = "color: white">Your Pets Monthly Reports</h1>
    
</div>

<div class = "history_container">
<div class = "piechart-container" >
  <canvas id="myChart" width="250" height="150" ></canvas>

  <script>
  let happyCount = 0;
  let sadCount = 0;
  let angryCount = 0;
  let otherCount = 0;

  const fileUploadData = @Html.Raw(Json.Serialize(Model.FileUpload));
  fileUploadData.forEach(item => {
		  console.log("Processing emotion:", item.emotion);
	switch (item.emotion) {
		case 0:
		  happyCount++;
		  break;
		case 1:
		  sadCount++;
		  break;
		case 2:
		  angryCount++;
		  break;
		default:
		  otherCount++;
		  break;
	}
  });

const xValues = ["Happy", "Sad", "Angry", "Other"];
const yValues = [happyCount, sadCount, angryCount, otherCount];
const barColors = ["#F78D7D", "#9BB9C3","#CB9897", "#FFCCBB"];
new Chart("myChart", {
  type: "pie",
  data: {
    labels: xValues,
    datasets: [{
      backgroundColor: barColors,
      data: yValues,
      color: '#ffffff',
    }]
  },
  options: {
    title: {
      display: true,
      text: "Emotions Breakdown",
      fontColor: 'white',
      fontSize: 20
    },
    legend:{
      labels: {
        fontColor: "white"
      }
    }
  }
});
</script>


</div>
   
<!-- <script src="fullcalendar/dist/index.global.js"></script>
<script> -->

<div class = "calendar-container">
 <script> 
      

      document.addEventListener('DOMContentLoaded', function() {
        var calendarEl = document.getElementById('calendar');
        var calendar=new FullCalendar.Calendar(calendarEl,{
          initialView:'dayGridMonth',
          displayEventTime: false,
          events:{
            url:'/History/MyFeed',
            method:'GET',
            failure:function(){
              alert('Failed to fetch events');
            }

          },
          eventClick: function(info){
            var imageUrl = info.event.extendedProps.imageUrl;
            var imgElement = document.createElement('img');
            imgElement.src = 'data:image/jpeg;base64,' + imageUrl;
            imgElement.style.maxWidth = '50%'; 
            imgElement.style.height = 'auto';
            var modal = document.getElementById('imageModal');
            modal.querySelector('.modal-body').innerHTML = '';
            modal.querySelector('.modal-body').appendChild(imgElement);
            var modalTitle = modal.querySelector('.modal-header h3');
            modalTitle.innerText = info.event.title; // Set the event title as the modal title
            var myModal = new bootstrap.Modal(modal);
            myModal.show();

          }

        });
        

               
        calendar.render();
         });



         
        
    </script>
  
<body style="background-color: #222831;" class = "fc-toolbar-title">
  <a id="feedUrl" href="/History/MyFeed" style="display: none;"></a>
    <div 
    id='calendar'
     ></div>
  <div id="imageModal" class="modal fade" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h3 style="color: #000000;">Title Here</h3>
                <h5 class="modal-title">Image</h5>
                <p style="color: #000000;">This photo was used to determine that emotion</p>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
               
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
  </body>
</div>
</div>


