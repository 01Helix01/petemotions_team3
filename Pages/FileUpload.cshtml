@page
@model FileUploadModel

@{
    ViewData["Title"] = "PetVibes - Upload";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <!--importing tensorflow js -->
    <script src="https://cdn.jsdelivr.net/npm/@@tensorflow/tfjs@@4.17.0/dist/tf.min.js"></script>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css2?family=Kumbh+Sans:wght@100..900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="path/to/styles.css">
</head>
<body style="background-color: #222831;">
    <div class="fileUpload">
        <div class="container">
            <div class="row justify-content-center">
                <div class="text-center">
                    <form id="uploadForm" enctype="multipart/form-data">
                        <label class="form-label" style="color: white;" for="customFile">Preferred file formats are .PNG and .JPG, please keep image size below 2MB!</label>
                        <div class="upload_buttongroup">
                            <input type="file" class="upload_buttonL" id="customFile" accept=".png, .jpg" aria-describedby="uploadBtn">
                            <div class="upload_buttonR">
                                <button class="btn btn-primary" type="button" id="uploadBtn">Upload</button>
                            </div>
                        </div>

                        <small id="fileSizeError" class="text-danger" style="display: none;">File size exceeds 2MB limit.</small>
                        <small id="fileTypeError" class="text-danger" style="display: none;">Please select a file with .png or .jpg extension.</small>
                    </form>
                </div>
            </div>
            <div class="row justify-content-center mt-4">
                <div class="col-md-8">
                    <div class="upload_imagePreview text-center" style="display: none;">
                        <div class="upload_imageContainer">
                            <div class="upload_spinner-border text-primary" role="status">
                                <span class="sr-only">Loading...</span>
                            </div>
                            <img id="previewImg" class="img-fluid" alt="Preview Image">
                        </div>
                    </div>
                </div>
            </div>
            <div class="row justify-content-center mt-4">
                <div class="col-md-8">
                    <div class="upload_emotionBox text-center" style="display: none;">
                        <p class="upload_emotionTitle">Emotion Detected: <span id="emotionContent">Thinking...</span></p>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <script>
        document.getElementById('uploadBtn').addEventListener('click', function () {
            var fileInput = document.getElementById('customFile');
            var file = fileInput.files[0]; // Get the selected file
            var fileSize = file.size; // Size in bytes
            var maxSize = 2 * 1024 * 1024; // 2MB in bytes
            var allowedExtensions = ['png', 'jpg'];

            if (fileSize > maxSize) {
                document.getElementById('fileSizeError').style.display = 'block';
            } else if (!allowedExtensions.includes(file.name.split('.').pop().toLowerCase())) {
                document.getElementById('fileTypeError').style.display = 'block';
            } else {
                document.getElementById('fileSizeError').style.display = 'none';
                document.getElementById('fileTypeError').style.display = 'none';

                // Reset emotion content to "Thinking..." and color to grey
                document.getElementById('emotionContent').innerHTML = "Thinking...";
                document.querySelector('.upload_emotionBox').style.backgroundColor = "#ced4da";

                var formData = new FormData();
                formData.append('file', file);
                var currentDate = new Date();
                var currentTime = currentDate.toLocaleString();
                formData.append('timestamp', currentTime);

                // var xhr = new XMLHttpRequest();
                // xhr.open('POST', '/FileUpload');
                // xhr.send(formData);

                // Display loading overlay
                document.querySelector('.upload_imageContainer img').style.filter = 'grayscale(70%)';
                document.querySelector('.upload_spinner-border').style.display = 'block';

                // Display image preview
                var reader = new FileReader();
                reader.onload = function (event) {
                    var img = document.getElementById('previewImg');
                    img.src = event.target.result;
                    document.querySelector('.upload_imagePreview').style.display = 'block';
                    // Display emotion box after image upload
                    document.querySelector('.upload_emotionBox').style.display = 'block';

                    img.onload = function () {
                        console.log(img.width + 'x' + img.height);
                        let tensor = tf.browser.fromPixels(img)
                            .resizeNearestNeighbor([224, 224])
                            .expandDims();

                        (async () => {
                            const model = await tf.loadLayersModel('tfjs_petemo/model.json');
                            let predictions = model.predict(tensor).data();
                            console.log(predictions);
                        })();
                    }
                };
                reader.readAsDataURL(file);

                // Simulate server response delay (remove this in actual implementation)
                setTimeout(function () {
                    // Hide loading overlay
                    document.querySelector('.upload_imageContainer img').style.filter = 'grayscale(0%)';
                    document.querySelector('.upload_spinner-border').style.display = 'none';

                    // Replace "Thinking..." with actual emotion received from server
                    var emotion = "Positive"; // Set manually for now, will be replaced once we get emotion from server
                    document.getElementById('emotionContent').innerHTML = emotion;

                    // Change emotion box color based on emotion
                    if (emotion === "Positive") {
                        document.querySelector('.upload_emotionBox').style.backgroundColor = "#7dc17d";
                    } else if (emotion === "Neutral") {
                        document.querySelector('.upload_emotionBox').style.backgroundColor = "#ced4da";
                    } else if (emotion === "Negative") {
                        document.querySelector('.upload_emotionBox').style.backgroundColor = "#dc7f7f";
                    }
                }, 2000); // 2 second delay
            }
        });
    </script>
</body>
</html>
